//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Aeropuerto_Ciudad", "Ciudad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Ciudad), "Aeropuerto", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Aeropuerto), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Asiento_Avion", "Avion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Avion), "Asiento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Asiento), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Asiento_TipoClase", "TipoClase", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.TipoClase), "Asiento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Asiento), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Reservacion_Asiento", "Asiento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Asiento), "Reservacion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Reservacion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Avion_SerieAvion", "SerieAvion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.SerieAvion), "Avion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Avion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_PlantaAvion_Avion", "Avion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Avion), "PlantaAvion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.PlantaAvion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Ciudad_Pais", "Pais", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Pais), "Ciudad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Ciudad), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_SerieAvion_MarcaAvion", "MarcaAvion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.MarcaAvion), "SerieAvion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.SerieAvion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Usuario_NivelUsuario", "NivelUsuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.NivelUsuario), "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Usuario), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Reservacion_Persona", "Persona", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Persona), "Reservacion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Reservacion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Reservacion_Usuario", "Usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Usuario), "Reservacion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Reservacion), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Precio_TipoClase", "TipoClase", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.TipoClase), "Precio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Precio), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Vuelo_Aeropuerto", "Aeropuerto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Aeropuerto), "Vuelo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Vuelo), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Vuelo_AeropuertoDestino", "Aeropuerto", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Aeropuerto), "Vuelo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Vuelo), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Vuelo_Avion1", "Avion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Avion), "Vuelo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Vuelo), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Precio_Vuelo", "Vuelo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Vuelo), "Precio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Precio), true)]
[assembly: EdmRelationshipAttribute("ReservaVuelosModel", "FK_Reservacion_Vuelo", "Vuelo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataLayer.Vuelo), "Reservacion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataLayer.Reservacion), true)]

#endregion

namespace DataLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ReservaVuelosEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ReservaVuelosEntities object using the connection string found in the 'ReservaVuelosEntities' section of the application configuration file.
        /// </summary>
        public ReservaVuelosEntities() : base("name=ReservaVuelosEntities", "ReservaVuelosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ReservaVuelosEntities object.
        /// </summary>
        public ReservaVuelosEntities(string connectionString) : base(connectionString, "ReservaVuelosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ReservaVuelosEntities object.
        /// </summary>
        public ReservaVuelosEntities(EntityConnection connection) : base(connection, "ReservaVuelosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aeropuerto> Aeropuertoes
        {
            get
            {
                if ((_Aeropuertoes == null))
                {
                    _Aeropuertoes = base.CreateObjectSet<Aeropuerto>("Aeropuertoes");
                }
                return _Aeropuertoes;
            }
        }
        private ObjectSet<Aeropuerto> _Aeropuertoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asiento> Asientoes
        {
            get
            {
                if ((_Asientoes == null))
                {
                    _Asientoes = base.CreateObjectSet<Asiento>("Asientoes");
                }
                return _Asientoes;
            }
        }
        private ObjectSet<Asiento> _Asientoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Avion> Avions
        {
            get
            {
                if ((_Avions == null))
                {
                    _Avions = base.CreateObjectSet<Avion>("Avions");
                }
                return _Avions;
            }
        }
        private ObjectSet<Avion> _Avions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ciudad> Ciudads
        {
            get
            {
                if ((_Ciudads == null))
                {
                    _Ciudads = base.CreateObjectSet<Ciudad>("Ciudads");
                }
                return _Ciudads;
            }
        }
        private ObjectSet<Ciudad> _Ciudads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarcaAvion> MarcaAvions
        {
            get
            {
                if ((_MarcaAvions == null))
                {
                    _MarcaAvions = base.CreateObjectSet<MarcaAvion>("MarcaAvions");
                }
                return _MarcaAvions;
            }
        }
        private ObjectSet<MarcaAvion> _MarcaAvions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NivelUsuario> NivelUsuarios
        {
            get
            {
                if ((_NivelUsuarios == null))
                {
                    _NivelUsuarios = base.CreateObjectSet<NivelUsuario>("NivelUsuarios");
                }
                return _NivelUsuarios;
            }
        }
        private ObjectSet<NivelUsuario> _NivelUsuarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pais> Pais1
        {
            get
            {
                if ((_Pais1 == null))
                {
                    _Pais1 = base.CreateObjectSet<Pais>("Pais1");
                }
                return _Pais1;
            }
        }
        private ObjectSet<Pais> _Pais1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Persona> Personas
        {
            get
            {
                if ((_Personas == null))
                {
                    _Personas = base.CreateObjectSet<Persona>("Personas");
                }
                return _Personas;
            }
        }
        private ObjectSet<Persona> _Personas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlantaAvion> PlantaAvions
        {
            get
            {
                if ((_PlantaAvions == null))
                {
                    _PlantaAvions = base.CreateObjectSet<PlantaAvion>("PlantaAvions");
                }
                return _PlantaAvions;
            }
        }
        private ObjectSet<PlantaAvion> _PlantaAvions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservacion> Reservacions
        {
            get
            {
                if ((_Reservacions == null))
                {
                    _Reservacions = base.CreateObjectSet<Reservacion>("Reservacions");
                }
                return _Reservacions;
            }
        }
        private ObjectSet<Reservacion> _Reservacions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SerieAvion> SerieAvions
        {
            get
            {
                if ((_SerieAvions == null))
                {
                    _SerieAvions = base.CreateObjectSet<SerieAvion>("SerieAvions");
                }
                return _SerieAvions;
            }
        }
        private ObjectSet<SerieAvion> _SerieAvions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TipoClase> TipoClases
        {
            get
            {
                if ((_TipoClases == null))
                {
                    _TipoClases = base.CreateObjectSet<TipoClase>("TipoClases");
                }
                return _TipoClases;
            }
        }
        private ObjectSet<TipoClase> _TipoClases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Usuario> Usuarios
        {
            get
            {
                if ((_Usuarios == null))
                {
                    _Usuarios = base.CreateObjectSet<Usuario>("Usuarios");
                }
                return _Usuarios;
            }
        }
        private ObjectSet<Usuario> _Usuarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Precio> Precios
        {
            get
            {
                if ((_Precios == null))
                {
                    _Precios = base.CreateObjectSet<Precio>("Precios");
                }
                return _Precios;
            }
        }
        private ObjectSet<Precio> _Precios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vuelo> Vueloes
        {
            get
            {
                if ((_Vueloes == null))
                {
                    _Vueloes = base.CreateObjectSet<Vuelo>("Vueloes");
                }
                return _Vueloes;
            }
        }
        private ObjectSet<Vuelo> _Vueloes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aeropuertoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAeropuertoes(Aeropuerto aeropuerto)
        {
            base.AddObject("Aeropuertoes", aeropuerto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Asientoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAsientoes(Asiento asiento)
        {
            base.AddObject("Asientoes", asiento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Avions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvions(Avion avion)
        {
            base.AddObject("Avions", avion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ciudads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCiudads(Ciudad ciudad)
        {
            base.AddObject("Ciudads", ciudad);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarcaAvions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarcaAvions(MarcaAvion marcaAvion)
        {
            base.AddObject("MarcaAvions", marcaAvion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NivelUsuarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNivelUsuarios(NivelUsuario nivelUsuario)
        {
            base.AddObject("NivelUsuarios", nivelUsuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pais1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPais1(Pais pais)
        {
            base.AddObject("Pais1", pais);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Personas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonas(Persona persona)
        {
            base.AddObject("Personas", persona);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlantaAvions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlantaAvions(PlantaAvion plantaAvion)
        {
            base.AddObject("PlantaAvions", plantaAvion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reservacions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservacions(Reservacion reservacion)
        {
            base.AddObject("Reservacions", reservacion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SerieAvions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSerieAvions(SerieAvion serieAvion)
        {
            base.AddObject("SerieAvions", serieAvion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TipoClases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTipoClases(TipoClase tipoClase)
        {
            base.AddObject("TipoClases", tipoClase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Usuarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsuarios(Usuario usuario)
        {
            base.AddObject("Usuarios", usuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Precios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrecios(Precio precio)
        {
            base.AddObject("Precios", precio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vueloes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVueloes(Vuelo vuelo)
        {
            base.AddObject("Vueloes", vuelo);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idNivel">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="login">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="isActive">No Metadata Documentation available.</param>
        public int spNewUsuario(Nullable<global::System.Int32> idNivel, global::System.String nombre, global::System.String login, global::System.String password, Nullable<global::System.Boolean> isActive)
        {
            ObjectParameter idNivelParameter;
            if (idNivel.HasValue)
            {
                idNivelParameter = new ObjectParameter("idNivel", idNivel);
            }
            else
            {
                idNivelParameter = new ObjectParameter("idNivel", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter loginParameter;
            if (login != null)
            {
                loginParameter = new ObjectParameter("Login", login);
            }
            else
            {
                loginParameter = new ObjectParameter("Login", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            ObjectParameter isActiveParameter;
            if (isActive.HasValue)
            {
                isActiveParameter = new ObjectParameter("isActive", isActive);
            }
            else
            {
                isActiveParameter = new ObjectParameter("isActive", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("spNewUsuario", idNivelParameter, nombreParameter, loginParameter, passwordParameter, isActiveParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        /// <param name="idNivel">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="login">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="isActive">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateUsuario(Nullable<global::System.Int32> idUsuario, Nullable<global::System.Int32> idNivel, global::System.String nombre, global::System.String login, global::System.String password, Nullable<global::System.Boolean> isActive)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(global::System.Int32));
            }
    
            ObjectParameter idNivelParameter;
            if (idNivel.HasValue)
            {
                idNivelParameter = new ObjectParameter("idNivel", idNivel);
            }
            else
            {
                idNivelParameter = new ObjectParameter("idNivel", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter loginParameter;
            if (login != null)
            {
                loginParameter = new ObjectParameter("Login", login);
            }
            else
            {
                loginParameter = new ObjectParameter("Login", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("Password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("Password", typeof(global::System.String));
            }
    
            ObjectParameter isActiveParameter;
            if (isActive.HasValue)
            {
                isActiveParameter = new ObjectParameter("isActive", isActive);
            }
            else
            {
                isActiveParameter = new ObjectParameter("isActive", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateUsuario", idUsuarioParameter, idNivelParameter, nombreParameter, loginParameter, passwordParameter, isActiveParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> spGetUsuarioFromID(Nullable<global::System.Int32> idUsuario)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Usuario>("spGetUsuarioFromID", idUsuarioParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> spGetUsuarioFromID(Nullable<global::System.Int32> idUsuario, MergeOption mergeOption)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Usuario>("spGetUsuarioFromID", mergeOption, idUsuarioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="login">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> spGetUsuarioFromLogin(global::System.String login)
        {
            ObjectParameter loginParameter;
            if (login != null)
            {
                loginParameter = new ObjectParameter("login", login);
            }
            else
            {
                loginParameter = new ObjectParameter("login", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Usuario>("spGetUsuarioFromLogin", loginParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="login">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> spGetUsuarioFromLogin(global::System.String login, MergeOption mergeOption)
        {
            ObjectParameter loginParameter;
            if (login != null)
            {
                loginParameter = new ObjectParameter("login", login);
            }
            else
            {
                loginParameter = new ObjectParameter("login", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Usuario>("spGetUsuarioFromLogin", mergeOption, loginParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<NivelUsuario> spGetAllNivelUsuario()
        {
            return base.ExecuteFunction<NivelUsuario>("spGetAllNivelUsuario");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<NivelUsuario> spGetAllNivelUsuario(MergeOption mergeOption)
        {
            return base.ExecuteFunction<NivelUsuario>("spGetAllNivelUsuario", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idNivel">No Metadata Documentation available.</param>
        public ObjectResult<NivelUsuario> spGetNivelUsuarioFromID(Nullable<global::System.Int32> idNivel)
        {
            ObjectParameter idNivelParameter;
            if (idNivel.HasValue)
            {
                idNivelParameter = new ObjectParameter("idNivel", idNivel);
            }
            else
            {
                idNivelParameter = new ObjectParameter("idNivel", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<NivelUsuario>("spGetNivelUsuarioFromID", idNivelParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idNivel">No Metadata Documentation available.</param>
        public ObjectResult<NivelUsuario> spGetNivelUsuarioFromID(Nullable<global::System.Int32> idNivel, MergeOption mergeOption)
        {
            ObjectParameter idNivelParameter;
            if (idNivel.HasValue)
            {
                idNivelParameter = new ObjectParameter("idNivel", idNivel);
            }
            else
            {
                idNivelParameter = new ObjectParameter("idNivel", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<NivelUsuario>("spGetNivelUsuarioFromID", mergeOption, idNivelParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idCiudad">No Metadata Documentation available.</param>
        public ObjectResult<Aeropuerto> spGetAeropuertoFromCiudad(Nullable<global::System.Int32> idCiudad)
        {
            ObjectParameter idCiudadParameter;
            if (idCiudad.HasValue)
            {
                idCiudadParameter = new ObjectParameter("idCiudad", idCiudad);
            }
            else
            {
                idCiudadParameter = new ObjectParameter("idCiudad", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Aeropuerto>("spGetAeropuertoFromCiudad", idCiudadParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idCiudad">No Metadata Documentation available.</param>
        public ObjectResult<Aeropuerto> spGetAeropuertoFromCiudad(Nullable<global::System.Int32> idCiudad, MergeOption mergeOption)
        {
            ObjectParameter idCiudadParameter;
            if (idCiudad.HasValue)
            {
                idCiudadParameter = new ObjectParameter("idCiudad", idCiudad);
            }
            else
            {
                idCiudadParameter = new ObjectParameter("idCiudad", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Aeropuerto>("spGetAeropuertoFromCiudad", mergeOption, idCiudadParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPais">No Metadata Documentation available.</param>
        public ObjectResult<Ciudad> spGetCiudadesFromPais(Nullable<global::System.Int32> idPais)
        {
            ObjectParameter idPaisParameter;
            if (idPais.HasValue)
            {
                idPaisParameter = new ObjectParameter("idPais", idPais);
            }
            else
            {
                idPaisParameter = new ObjectParameter("idPais", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Ciudad>("spGetCiudadesFromPais", idPaisParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idPais">No Metadata Documentation available.</param>
        public ObjectResult<Ciudad> spGetCiudadesFromPais(Nullable<global::System.Int32> idPais, MergeOption mergeOption)
        {
            ObjectParameter idPaisParameter;
            if (idPais.HasValue)
            {
                idPaisParameter = new ObjectParameter("idPais", idPais);
            }
            else
            {
                idPaisParameter = new ObjectParameter("idPais", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Ciudad>("spGetCiudadesFromPais", mergeOption, idPaisParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewPais(global::System.String nombre)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewPais", nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idpais">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewCiudad(global::System.String nombre, Nullable<global::System.Int32> idpais)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idpaisParameter;
            if (idpais.HasValue)
            {
                idpaisParameter = new ObjectParameter("idpais", idpais);
            }
            else
            {
                idpaisParameter = new ObjectParameter("idpais", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewCiudad", nombreParameter, idpaisParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idCiudad">No Metadata Documentation available.</param>
        /// <param name="siglas">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewAeropuerto(global::System.String nombre, Nullable<global::System.Int32> idCiudad, global::System.String siglas)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idCiudadParameter;
            if (idCiudad.HasValue)
            {
                idCiudadParameter = new ObjectParameter("idCiudad", idCiudad);
            }
            else
            {
                idCiudadParameter = new ObjectParameter("idCiudad", typeof(global::System.Int32));
            }
    
            ObjectParameter siglasParameter;
            if (siglas != null)
            {
                siglasParameter = new ObjectParameter("Siglas", siglas);
            }
            else
            {
                siglasParameter = new ObjectParameter("Siglas", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewAeropuerto", nombreParameter, idCiudadParameter, siglasParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAeropuerto">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idCiudad">No Metadata Documentation available.</param>
        /// <param name="siglas">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUdateAeropuerto(Nullable<global::System.Int32> idAeropuerto, global::System.String nombre, Nullable<global::System.Int32> idCiudad, global::System.String siglas)
        {
            ObjectParameter idAeropuertoParameter;
            if (idAeropuerto.HasValue)
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", idAeropuerto);
            }
            else
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idCiudadParameter;
            if (idCiudad.HasValue)
            {
                idCiudadParameter = new ObjectParameter("idCiudad", idCiudad);
            }
            else
            {
                idCiudadParameter = new ObjectParameter("idCiudad", typeof(global::System.Int32));
            }
    
            ObjectParameter siglasParameter;
            if (siglas != null)
            {
                siglasParameter = new ObjectParameter("Siglas", siglas);
            }
            else
            {
                siglasParameter = new ObjectParameter("Siglas", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUdateAeropuerto", idAeropuertoParameter, nombreParameter, idCiudadParameter, siglasParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idCiudad">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idpais">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateCiudad(Nullable<global::System.Int32> idCiudad, global::System.String nombre, Nullable<global::System.Int32> idpais)
        {
            ObjectParameter idCiudadParameter;
            if (idCiudad.HasValue)
            {
                idCiudadParameter = new ObjectParameter("idCiudad", idCiudad);
            }
            else
            {
                idCiudadParameter = new ObjectParameter("idCiudad", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idpaisParameter;
            if (idpais.HasValue)
            {
                idpaisParameter = new ObjectParameter("idpais", idpais);
            }
            else
            {
                idpaisParameter = new ObjectParameter("idpais", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateCiudad", idCiudadParameter, nombreParameter, idpaisParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPais">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdatePais(Nullable<global::System.Int32> idPais, global::System.String nombre)
        {
            ObjectParameter idPaisParameter;
            if (idPais.HasValue)
            {
                idPaisParameter = new ObjectParameter("idPais", idPais);
            }
            else
            {
                idPaisParameter = new ObjectParameter("idPais", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdatePais", idPaisParameter, nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Pais> spGetAllPaises()
        {
            return base.ExecuteFunction<Pais>("spGetAllPaises");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Pais> spGetAllPaises(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Pais>("spGetAllPaises", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAeropuerto">No Metadata Documentation available.</param>
        public ObjectResult<Aeropuerto> spGetAeropuertoFromID(Nullable<global::System.Int32> idAeropuerto)
        {
            ObjectParameter idAeropuertoParameter;
            if (idAeropuerto.HasValue)
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", idAeropuerto);
            }
            else
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Aeropuerto>("spGetAeropuertoFromID", idAeropuertoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAeropuerto">No Metadata Documentation available.</param>
        public ObjectResult<Aeropuerto> spGetAeropuertoFromID(Nullable<global::System.Int32> idAeropuerto, MergeOption mergeOption)
        {
            ObjectParameter idAeropuertoParameter;
            if (idAeropuerto.HasValue)
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", idAeropuerto);
            }
            else
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Aeropuerto>("spGetAeropuertoFromID", mergeOption, idAeropuertoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<TipoClase> spGetAllTipoClases()
        {
            return base.ExecuteFunction<TipoClase>("spGetAllTipoClases");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<TipoClase> spGetAllTipoClases(MergeOption mergeOption)
        {
            return base.ExecuteFunction<TipoClase>("spGetAllTipoClases", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="idTipoClase">No Metadata Documentation available.</param>
        /// <param name="numero">No Metadata Documentation available.</param>
        /// <param name="fila">No Metadata Documentation available.</param>
        /// <param name="cordX">No Metadata Documentation available.</param>
        /// <param name="cordY">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewAsiento(Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> idTipoClase, global::System.String numero, Nullable<global::System.Int32> fila, Nullable<global::System.Int32> cordX, Nullable<global::System.Int32> cordY, Nullable<global::System.Int32> piso)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter idTipoClaseParameter;
            if (idTipoClase.HasValue)
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", idTipoClase);
            }
            else
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", typeof(global::System.Int32));
            }
    
            ObjectParameter numeroParameter;
            if (numero != null)
            {
                numeroParameter = new ObjectParameter("Numero", numero);
            }
            else
            {
                numeroParameter = new ObjectParameter("Numero", typeof(global::System.String));
            }
    
            ObjectParameter filaParameter;
            if (fila.HasValue)
            {
                filaParameter = new ObjectParameter("Fila", fila);
            }
            else
            {
                filaParameter = new ObjectParameter("Fila", typeof(global::System.Int32));
            }
    
            ObjectParameter cordXParameter;
            if (cordX.HasValue)
            {
                cordXParameter = new ObjectParameter("CordX", cordX);
            }
            else
            {
                cordXParameter = new ObjectParameter("CordX", typeof(global::System.Int32));
            }
    
            ObjectParameter cordYParameter;
            if (cordY.HasValue)
            {
                cordYParameter = new ObjectParameter("CordY", cordY);
            }
            else
            {
                cordYParameter = new ObjectParameter("CordY", typeof(global::System.Int32));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewAsiento", idAvionParameter, idTipoClaseParameter, numeroParameter, filaParameter, cordXParameter, cordYParameter, pisoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewTipoClase(global::System.String nombre)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewTipoClase", nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAsiento">No Metadata Documentation available.</param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="idTipoClase">No Metadata Documentation available.</param>
        /// <param name="numero">No Metadata Documentation available.</param>
        /// <param name="fila">No Metadata Documentation available.</param>
        /// <param name="cordX">No Metadata Documentation available.</param>
        /// <param name="cordY">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateAsiento(Nullable<global::System.Int32> idAsiento, Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> idTipoClase, global::System.String numero, Nullable<global::System.Int32> fila, Nullable<global::System.Int32> cordX, Nullable<global::System.Int32> cordY, Nullable<global::System.Int32> piso)
        {
            ObjectParameter idAsientoParameter;
            if (idAsiento.HasValue)
            {
                idAsientoParameter = new ObjectParameter("idAsiento", idAsiento);
            }
            else
            {
                idAsientoParameter = new ObjectParameter("idAsiento", typeof(global::System.Int32));
            }
    
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter idTipoClaseParameter;
            if (idTipoClase.HasValue)
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", idTipoClase);
            }
            else
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", typeof(global::System.Int32));
            }
    
            ObjectParameter numeroParameter;
            if (numero != null)
            {
                numeroParameter = new ObjectParameter("Numero", numero);
            }
            else
            {
                numeroParameter = new ObjectParameter("Numero", typeof(global::System.String));
            }
    
            ObjectParameter filaParameter;
            if (fila.HasValue)
            {
                filaParameter = new ObjectParameter("Fila", fila);
            }
            else
            {
                filaParameter = new ObjectParameter("Fila", typeof(global::System.Int32));
            }
    
            ObjectParameter cordXParameter;
            if (cordX.HasValue)
            {
                cordXParameter = new ObjectParameter("CordX", cordX);
            }
            else
            {
                cordXParameter = new ObjectParameter("CordX", typeof(global::System.Int32));
            }
    
            ObjectParameter cordYParameter;
            if (cordY.HasValue)
            {
                cordYParameter = new ObjectParameter("CordY", cordY);
            }
            else
            {
                cordYParameter = new ObjectParameter("CordY", typeof(global::System.Int32));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateAsiento", idAsientoParameter, idAvionParameter, idTipoClaseParameter, numeroParameter, filaParameter, cordXParameter, cordYParameter, pisoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idTipo">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateTipoClase(Nullable<global::System.Int32> idTipo, global::System.String nombre)
        {
            ObjectParameter idTipoParameter;
            if (idTipo.HasValue)
            {
                idTipoParameter = new ObjectParameter("idTipo", idTipo);
            }
            else
            {
                idTipoParameter = new ObjectParameter("idTipo", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateTipoClase", idTipoParameter, nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAsiento">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientoFromID(Nullable<global::System.Int32> idAsiento)
        {
            ObjectParameter idAsientoParameter;
            if (idAsiento.HasValue)
            {
                idAsientoParameter = new ObjectParameter("idAsiento", idAsiento);
            }
            else
            {
                idAsientoParameter = new ObjectParameter("idAsiento", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientoFromID", idAsientoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAsiento">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientoFromID(Nullable<global::System.Int32> idAsiento, MergeOption mergeOption)
        {
            ObjectParameter idAsientoParameter;
            if (idAsiento.HasValue)
            {
                idAsientoParameter = new ObjectParameter("idAsiento", idAsiento);
            }
            else
            {
                idAsientoParameter = new ObjectParameter("idAsiento", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientoFromID", mergeOption, idAsientoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientosFromAvion(Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> piso)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientosFromAvion", idAvionParameter, pisoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientosFromAvion(Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> piso, MergeOption mergeOption)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientosFromAvion", mergeOption, idAvionParameter, pisoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientosNoOcupados(Nullable<global::System.Int32> idVuelo)
        {
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientosNoOcupados", idVueloParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        public ObjectResult<Asiento> spGetAsientosNoOcupados(Nullable<global::System.Int32> idVuelo, MergeOption mergeOption)
        {
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Asiento>("spGetAsientosNoOcupados", mergeOption, idVueloParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idSerie">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewAvion(Nullable<global::System.Int32> idSerie)
        {
            ObjectParameter idSerieParameter;
            if (idSerie.HasValue)
            {
                idSerieParameter = new ObjectParameter("idSerie", idSerie);
            }
            else
            {
                idSerieParameter = new ObjectParameter("idSerie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewAvion", idSerieParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewMarcaAvion(global::System.String nombre)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewMarcaAvion", nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idMarca">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewSerieAvion(global::System.String nombre, Nullable<global::System.Int32> idMarca)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idMarcaParameter;
            if (idMarca.HasValue)
            {
                idMarcaParameter = new ObjectParameter("idMarca", idMarca);
            }
            else
            {
                idMarcaParameter = new ObjectParameter("idMarca", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewSerieAvion", nombreParameter, idMarcaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="idSerie">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateAvion(Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> idSerie)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter idSerieParameter;
            if (idSerie.HasValue)
            {
                idSerieParameter = new ObjectParameter("idSerie", idSerie);
            }
            else
            {
                idSerieParameter = new ObjectParameter("idSerie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateAvion", idAvionParameter, idSerieParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMarca">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateMarcaAvion(Nullable<global::System.Int32> idMarca, global::System.String nombre)
        {
            ObjectParameter idMarcaParameter;
            if (idMarca.HasValue)
            {
                idMarcaParameter = new ObjectParameter("idMarca", idMarca);
            }
            else
            {
                idMarcaParameter = new ObjectParameter("idMarca", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateMarcaAvion", idMarcaParameter, nombreParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idSerie">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="idMarca">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateSerieAvion(Nullable<global::System.Int32> idSerie, global::System.String nombre, Nullable<global::System.Int32> idMarca)
        {
            ObjectParameter idSerieParameter;
            if (idSerie.HasValue)
            {
                idSerieParameter = new ObjectParameter("idSerie", idSerie);
            }
            else
            {
                idSerieParameter = new ObjectParameter("idSerie", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter idMarcaParameter;
            if (idMarca.HasValue)
            {
                idMarcaParameter = new ObjectParameter("idMarca", idMarca);
            }
            else
            {
                idMarcaParameter = new ObjectParameter("idMarca", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateSerieAvion", idSerieParameter, nombreParameter, idMarcaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="imagen">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewPlanta(Nullable<global::System.Int32> idAvion, global::System.Byte[] imagen, Nullable<global::System.Int32> piso)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter imagenParameter;
            if (imagen != null)
            {
                imagenParameter = new ObjectParameter("Imagen", imagen);
            }
            else
            {
                imagenParameter = new ObjectParameter("Imagen", typeof(global::System.Byte[]));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewPlanta", idAvionParameter, imagenParameter, pisoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPlanta">No Metadata Documentation available.</param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="imagen">No Metadata Documentation available.</param>
        /// <param name="piso">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdatePlanta(Nullable<global::System.Int32> idPlanta, Nullable<global::System.Int32> idAvion, global::System.Byte[] imagen, Nullable<global::System.Int32> piso)
        {
            ObjectParameter idPlantaParameter;
            if (idPlanta.HasValue)
            {
                idPlantaParameter = new ObjectParameter("idPlanta", idPlanta);
            }
            else
            {
                idPlantaParameter = new ObjectParameter("idPlanta", typeof(global::System.Int32));
            }
    
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter imagenParameter;
            if (imagen != null)
            {
                imagenParameter = new ObjectParameter("Imagen", imagen);
            }
            else
            {
                imagenParameter = new ObjectParameter("Imagen", typeof(global::System.Byte[]));
            }
    
            ObjectParameter pisoParameter;
            if (piso.HasValue)
            {
                pisoParameter = new ObjectParameter("Piso", piso);
            }
            else
            {
                pisoParameter = new ObjectParameter("Piso", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdatePlanta", idPlantaParameter, idAvionParameter, imagenParameter, pisoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<MarcaAvion> spGetAllMarcaAvion()
        {
            return base.ExecuteFunction<MarcaAvion>("spGetAllMarcaAvion");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<MarcaAvion> spGetAllMarcaAvion(MergeOption mergeOption)
        {
            return base.ExecuteFunction<MarcaAvion>("spGetAllMarcaAvion", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMarca">No Metadata Documentation available.</param>
        public ObjectResult<SerieAvion> spGetSerieAvionFromMarca(Nullable<global::System.Int32> idMarca)
        {
            ObjectParameter idMarcaParameter;
            if (idMarca.HasValue)
            {
                idMarcaParameter = new ObjectParameter("idMarca", idMarca);
            }
            else
            {
                idMarcaParameter = new ObjectParameter("idMarca", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SerieAvion>("spGetSerieAvionFromMarca", idMarcaParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idMarca">No Metadata Documentation available.</param>
        public ObjectResult<SerieAvion> spGetSerieAvionFromMarca(Nullable<global::System.Int32> idMarca, MergeOption mergeOption)
        {
            ObjectParameter idMarcaParameter;
            if (idMarca.HasValue)
            {
                idMarcaParameter = new ObjectParameter("idMarca", idMarca);
            }
            else
            {
                idMarcaParameter = new ObjectParameter("idMarca", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SerieAvion>("spGetSerieAvionFromMarca", mergeOption, idMarcaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idSerie">No Metadata Documentation available.</param>
        public ObjectResult<Avion> spGetAvionesFromSerie(Nullable<global::System.Int32> idSerie)
        {
            ObjectParameter idSerieParameter;
            if (idSerie.HasValue)
            {
                idSerieParameter = new ObjectParameter("idSerie", idSerie);
            }
            else
            {
                idSerieParameter = new ObjectParameter("idSerie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Avion>("spGetAvionesFromSerie", idSerieParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idSerie">No Metadata Documentation available.</param>
        public ObjectResult<Avion> spGetAvionesFromSerie(Nullable<global::System.Int32> idSerie, MergeOption mergeOption)
        {
            ObjectParameter idSerieParameter;
            if (idSerie.HasValue)
            {
                idSerieParameter = new ObjectParameter("idSerie", idSerie);
            }
            else
            {
                idSerieParameter = new ObjectParameter("idSerie", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Avion>("spGetAvionesFromSerie", mergeOption, idSerieParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        public ObjectResult<Avion> spGetAvionFromID(Nullable<global::System.Int32> idAvion)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Avion>("spGetAvionFromID", idAvionParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        public ObjectResult<Avion> spGetAvionFromID(Nullable<global::System.Int32> idAvion, MergeOption mergeOption)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Avion>("spGetAvionFromID", mergeOption, idAvionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        public ObjectResult<PlantaAvion> spGetPlantasFromAvion(Nullable<global::System.Int32> idAvion)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlantaAvion>("spGetPlantasFromAvion", idAvionParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        public ObjectResult<PlantaAvion> spGetPlantasFromAvion(Nullable<global::System.Int32> idAvion, MergeOption mergeOption)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PlantaAvion>("spGetPlantasFromAvion", mergeOption, idAvionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPersona">No Metadata Documentation available.</param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        /// <param name="idAsiento">No Metadata Documentation available.</param>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewReservacion(Nullable<global::System.Int32> idPersona, Nullable<global::System.Int32> idVuelo, Nullable<global::System.Int32> idAsiento, Nullable<global::System.Int32> idUsuario)
        {
            ObjectParameter idPersonaParameter;
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(global::System.Int32));
            }
    
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            ObjectParameter idAsientoParameter;
            if (idAsiento.HasValue)
            {
                idAsientoParameter = new ObjectParameter("idAsiento", idAsiento);
            }
            else
            {
                idAsientoParameter = new ObjectParameter("idAsiento", typeof(global::System.Int32));
            }
    
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewReservacion", idPersonaParameter, idVueloParameter, idAsientoParameter, idUsuarioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="apellidos">No Metadata Documentation available.</param>
        /// <param name="pasaporte">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewPersona(global::System.String nombre, global::System.String apellidos, global::System.String pasaporte)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter apellidosParameter;
            if (apellidos != null)
            {
                apellidosParameter = new ObjectParameter("Apellidos", apellidos);
            }
            else
            {
                apellidosParameter = new ObjectParameter("Apellidos", typeof(global::System.String));
            }
    
            ObjectParameter pasaporteParameter;
            if (pasaporte != null)
            {
                pasaporteParameter = new ObjectParameter("Pasaporte", pasaporte);
            }
            else
            {
                pasaporteParameter = new ObjectParameter("Pasaporte", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewPersona", nombreParameter, apellidosParameter, pasaporteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPersona">No Metadata Documentation available.</param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="apellidos">No Metadata Documentation available.</param>
        /// <param name="pasaporte">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdatePersona(Nullable<global::System.Int32> idPersona, global::System.String nombre, global::System.String apellidos, global::System.String pasaporte)
        {
            ObjectParameter idPersonaParameter;
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(global::System.Int32));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter apellidosParameter;
            if (apellidos != null)
            {
                apellidosParameter = new ObjectParameter("Apellidos", apellidos);
            }
            else
            {
                apellidosParameter = new ObjectParameter("Apellidos", typeof(global::System.String));
            }
    
            ObjectParameter pasaporteParameter;
            if (pasaporte != null)
            {
                pasaporteParameter = new ObjectParameter("Pasaporte", pasaporte);
            }
            else
            {
                pasaporteParameter = new ObjectParameter("Pasaporte", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdatePersona", idPersonaParameter, nombreParameter, apellidosParameter, pasaporteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idReservacion">No Metadata Documentation available.</param>
        /// <param name="idPersona">No Metadata Documentation available.</param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        /// <param name="idAsiento">No Metadata Documentation available.</param>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateReservacion(Nullable<global::System.Int32> idReservacion, Nullable<global::System.Int32> idPersona, Nullable<global::System.Int32> idVuelo, Nullable<global::System.Int32> idAsiento, Nullable<global::System.Int32> idUsuario)
        {
            ObjectParameter idReservacionParameter;
            if (idReservacion.HasValue)
            {
                idReservacionParameter = new ObjectParameter("idReservacion", idReservacion);
            }
            else
            {
                idReservacionParameter = new ObjectParameter("idReservacion", typeof(global::System.Int32));
            }
    
            ObjectParameter idPersonaParameter;
            if (idPersona.HasValue)
            {
                idPersonaParameter = new ObjectParameter("idPersona", idPersona);
            }
            else
            {
                idPersonaParameter = new ObjectParameter("idPersona", typeof(global::System.Int32));
            }
    
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            ObjectParameter idAsientoParameter;
            if (idAsiento.HasValue)
            {
                idAsientoParameter = new ObjectParameter("idAsiento", idAsiento);
            }
            else
            {
                idAsientoParameter = new ObjectParameter("idAsiento", typeof(global::System.Int32));
            }
    
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("idUsuario", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateReservacion", idReservacionParameter, idPersonaParameter, idVueloParameter, idAsientoParameter, idUsuarioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="apellidos">No Metadata Documentation available.</param>
        public ObjectResult<Persona> spGetPersonaLikeApellido(global::System.String nombre, global::System.String apellidos)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter apellidosParameter;
            if (apellidos != null)
            {
                apellidosParameter = new ObjectParameter("Apellidos", apellidos);
            }
            else
            {
                apellidosParameter = new ObjectParameter("Apellidos", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Persona>("spGetPersonaLikeApellido", nombreParameter, apellidosParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="nombre">No Metadata Documentation available.</param>
        /// <param name="apellidos">No Metadata Documentation available.</param>
        public ObjectResult<Persona> spGetPersonaLikeApellido(global::System.String nombre, global::System.String apellidos, MergeOption mergeOption)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter apellidosParameter;
            if (apellidos != null)
            {
                apellidosParameter = new ObjectParameter("Apellidos", apellidos);
            }
            else
            {
                apellidosParameter = new ObjectParameter("Apellidos", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Persona>("spGetPersonaLikeApellido", mergeOption, nombreParameter, apellidosParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="pasaporte">No Metadata Documentation available.</param>
        public ObjectResult<Persona> spGetPersonaFromPasaporte(global::System.String pasaporte)
        {
            ObjectParameter pasaporteParameter;
            if (pasaporte != null)
            {
                pasaporteParameter = new ObjectParameter("pasaporte", pasaporte);
            }
            else
            {
                pasaporteParameter = new ObjectParameter("pasaporte", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Persona>("spGetPersonaFromPasaporte", pasaporteParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="pasaporte">No Metadata Documentation available.</param>
        public ObjectResult<Persona> spGetPersonaFromPasaporte(global::System.String pasaporte, MergeOption mergeOption)
        {
            ObjectParameter pasaporteParameter;
            if (pasaporte != null)
            {
                pasaporteParameter = new ObjectParameter("pasaporte", pasaporte);
            }
            else
            {
                pasaporteParameter = new ObjectParameter("pasaporte", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Persona>("spGetPersonaFromPasaporte", mergeOption, pasaporteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idReserva">No Metadata Documentation available.</param>
        public ObjectResult<Reservacion> spGetReservaFromID(Nullable<global::System.Int32> idReserva)
        {
            ObjectParameter idReservaParameter;
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Reservacion>("spGetReservaFromID", idReservaParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idReserva">No Metadata Documentation available.</param>
        public ObjectResult<Reservacion> spGetReservaFromID(Nullable<global::System.Int32> idReserva, MergeOption mergeOption)
        {
            ObjectParameter idReservaParameter;
            if (idReserva.HasValue)
            {
                idReservaParameter = new ObjectParameter("idReserva", idReserva);
            }
            else
            {
                idReservaParameter = new ObjectParameter("idReserva", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Reservacion>("spGetReservaFromID", mergeOption, idReservaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fecha_salida1">No Metadata Documentation available.</param>
        /// <param name="fecha_salida2">No Metadata Documentation available.</param>
        /// <param name="origen">No Metadata Documentation available.</param>
        /// <param name="destino">No Metadata Documentation available.</param>
        public ObjectResult<Vuelo> spGetVueloFromFechaAndPuerto(Nullable<global::System.DateTime> fecha_salida1, Nullable<global::System.DateTime> fecha_salida2, Nullable<global::System.Int32> origen, Nullable<global::System.Int32> destino)
        {
            ObjectParameter fecha_salida1Parameter;
            if (fecha_salida1.HasValue)
            {
                fecha_salida1Parameter = new ObjectParameter("fecha_salida1", fecha_salida1);
            }
            else
            {
                fecha_salida1Parameter = new ObjectParameter("fecha_salida1", typeof(global::System.DateTime));
            }
    
            ObjectParameter fecha_salida2Parameter;
            if (fecha_salida2.HasValue)
            {
                fecha_salida2Parameter = new ObjectParameter("fecha_salida2", fecha_salida2);
            }
            else
            {
                fecha_salida2Parameter = new ObjectParameter("fecha_salida2", typeof(global::System.DateTime));
            }
    
            ObjectParameter origenParameter;
            if (origen.HasValue)
            {
                origenParameter = new ObjectParameter("Origen", origen);
            }
            else
            {
                origenParameter = new ObjectParameter("Origen", typeof(global::System.Int32));
            }
    
            ObjectParameter destinoParameter;
            if (destino.HasValue)
            {
                destinoParameter = new ObjectParameter("Destino", destino);
            }
            else
            {
                destinoParameter = new ObjectParameter("Destino", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Vuelo>("spGetVueloFromFechaAndPuerto", fecha_salida1Parameter, fecha_salida2Parameter, origenParameter, destinoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="fecha_salida1">No Metadata Documentation available.</param>
        /// <param name="fecha_salida2">No Metadata Documentation available.</param>
        /// <param name="origen">No Metadata Documentation available.</param>
        /// <param name="destino">No Metadata Documentation available.</param>
        public ObjectResult<Vuelo> spGetVueloFromFechaAndPuerto(Nullable<global::System.DateTime> fecha_salida1, Nullable<global::System.DateTime> fecha_salida2, Nullable<global::System.Int32> origen, Nullable<global::System.Int32> destino, MergeOption mergeOption)
        {
            ObjectParameter fecha_salida1Parameter;
            if (fecha_salida1.HasValue)
            {
                fecha_salida1Parameter = new ObjectParameter("fecha_salida1", fecha_salida1);
            }
            else
            {
                fecha_salida1Parameter = new ObjectParameter("fecha_salida1", typeof(global::System.DateTime));
            }
    
            ObjectParameter fecha_salida2Parameter;
            if (fecha_salida2.HasValue)
            {
                fecha_salida2Parameter = new ObjectParameter("fecha_salida2", fecha_salida2);
            }
            else
            {
                fecha_salida2Parameter = new ObjectParameter("fecha_salida2", typeof(global::System.DateTime));
            }
    
            ObjectParameter origenParameter;
            if (origen.HasValue)
            {
                origenParameter = new ObjectParameter("Origen", origen);
            }
            else
            {
                origenParameter = new ObjectParameter("Origen", typeof(global::System.Int32));
            }
    
            ObjectParameter destinoParameter;
            if (destino.HasValue)
            {
                destinoParameter = new ObjectParameter("Destino", destino);
            }
            else
            {
                destinoParameter = new ObjectParameter("Destino", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Vuelo>("spGetVueloFromFechaAndPuerto", mergeOption, fecha_salida1Parameter, fecha_salida2Parameter, origenParameter, destinoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idTipoClase">No Metadata Documentation available.</param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        /// <param name="precio">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewPrecio(Nullable<global::System.Int32> idTipoClase, Nullable<global::System.Int32> idVuelo, Nullable<global::System.Decimal> precio)
        {
            ObjectParameter idTipoClaseParameter;
            if (idTipoClase.HasValue)
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", idTipoClase);
            }
            else
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", typeof(global::System.Int32));
            }
    
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            ObjectParameter precioParameter;
            if (precio.HasValue)
            {
                precioParameter = new ObjectParameter("Precio", precio);
            }
            else
            {
                precioParameter = new ObjectParameter("Precio", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewPrecio", idTipoClaseParameter, idVueloParameter, precioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="idAeropuerto">No Metadata Documentation available.</param>
        /// <param name="fechaSalida">No Metadata Documentation available.</param>
        /// <param name="horaSalida">No Metadata Documentation available.</param>
        /// <param name="fechaLlegada">No Metadata Documentation available.</param>
        /// <param name="horaLlegada">No Metadata Documentation available.</param>
        /// <param name="comentario">No Metadata Documentation available.</param>
        /// <param name="idDestinoAero">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spNewVuelo(Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> idAeropuerto, Nullable<global::System.DateTime> fechaSalida, Nullable<global::System.TimeSpan> horaSalida, Nullable<global::System.DateTime> fechaLlegada, Nullable<global::System.TimeSpan> horaLlegada, global::System.String comentario, Nullable<global::System.Int32> idDestinoAero)
        {
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter idAeropuertoParameter;
            if (idAeropuerto.HasValue)
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", idAeropuerto);
            }
            else
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", typeof(global::System.Int32));
            }
    
            ObjectParameter fechaSalidaParameter;
            if (fechaSalida.HasValue)
            {
                fechaSalidaParameter = new ObjectParameter("FechaSalida", fechaSalida);
            }
            else
            {
                fechaSalidaParameter = new ObjectParameter("FechaSalida", typeof(global::System.DateTime));
            }
    
            ObjectParameter horaSalidaParameter;
            if (horaSalida.HasValue)
            {
                horaSalidaParameter = new ObjectParameter("HoraSalida", horaSalida);
            }
            else
            {
                horaSalidaParameter = new ObjectParameter("HoraSalida", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter fechaLlegadaParameter;
            if (fechaLlegada.HasValue)
            {
                fechaLlegadaParameter = new ObjectParameter("FechaLlegada", fechaLlegada);
            }
            else
            {
                fechaLlegadaParameter = new ObjectParameter("FechaLlegada", typeof(global::System.DateTime));
            }
    
            ObjectParameter horaLlegadaParameter;
            if (horaLlegada.HasValue)
            {
                horaLlegadaParameter = new ObjectParameter("HoraLlegada", horaLlegada);
            }
            else
            {
                horaLlegadaParameter = new ObjectParameter("HoraLlegada", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter comentarioParameter;
            if (comentario != null)
            {
                comentarioParameter = new ObjectParameter("Comentario", comentario);
            }
            else
            {
                comentarioParameter = new ObjectParameter("Comentario", typeof(global::System.String));
            }
    
            ObjectParameter idDestinoAeroParameter;
            if (idDestinoAero.HasValue)
            {
                idDestinoAeroParameter = new ObjectParameter("idDestinoAero", idDestinoAero);
            }
            else
            {
                idDestinoAeroParameter = new ObjectParameter("idDestinoAero", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spNewVuelo", idAvionParameter, idAeropuertoParameter, fechaSalidaParameter, horaSalidaParameter, fechaLlegadaParameter, horaLlegadaParameter, comentarioParameter, idDestinoAeroParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        /// <param name="idAvion">No Metadata Documentation available.</param>
        /// <param name="idAeropuerto">No Metadata Documentation available.</param>
        /// <param name="fechaSalida">No Metadata Documentation available.</param>
        /// <param name="horaSalida">No Metadata Documentation available.</param>
        /// <param name="fechaLlegada">No Metadata Documentation available.</param>
        /// <param name="horaLlegada">No Metadata Documentation available.</param>
        /// <param name="comentario">No Metadata Documentation available.</param>
        /// <param name="idDestinoAero">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdateVuelo(Nullable<global::System.Int32> idVuelo, Nullable<global::System.Int32> idAvion, Nullable<global::System.Int32> idAeropuerto, Nullable<global::System.DateTime> fechaSalida, Nullable<global::System.TimeSpan> horaSalida, Nullable<global::System.DateTime> fechaLlegada, Nullable<global::System.TimeSpan> horaLlegada, global::System.String comentario, Nullable<global::System.Int32> idDestinoAero)
        {
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            ObjectParameter idAvionParameter;
            if (idAvion.HasValue)
            {
                idAvionParameter = new ObjectParameter("idAvion", idAvion);
            }
            else
            {
                idAvionParameter = new ObjectParameter("idAvion", typeof(global::System.Int32));
            }
    
            ObjectParameter idAeropuertoParameter;
            if (idAeropuerto.HasValue)
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", idAeropuerto);
            }
            else
            {
                idAeropuertoParameter = new ObjectParameter("idAeropuerto", typeof(global::System.Int32));
            }
    
            ObjectParameter fechaSalidaParameter;
            if (fechaSalida.HasValue)
            {
                fechaSalidaParameter = new ObjectParameter("FechaSalida", fechaSalida);
            }
            else
            {
                fechaSalidaParameter = new ObjectParameter("FechaSalida", typeof(global::System.DateTime));
            }
    
            ObjectParameter horaSalidaParameter;
            if (horaSalida.HasValue)
            {
                horaSalidaParameter = new ObjectParameter("HoraSalida", horaSalida);
            }
            else
            {
                horaSalidaParameter = new ObjectParameter("HoraSalida", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter fechaLlegadaParameter;
            if (fechaLlegada.HasValue)
            {
                fechaLlegadaParameter = new ObjectParameter("FechaLlegada", fechaLlegada);
            }
            else
            {
                fechaLlegadaParameter = new ObjectParameter("FechaLlegada", typeof(global::System.DateTime));
            }
    
            ObjectParameter horaLlegadaParameter;
            if (horaLlegada.HasValue)
            {
                horaLlegadaParameter = new ObjectParameter("HoraLlegada", horaLlegada);
            }
            else
            {
                horaLlegadaParameter = new ObjectParameter("HoraLlegada", typeof(global::System.TimeSpan));
            }
    
            ObjectParameter comentarioParameter;
            if (comentario != null)
            {
                comentarioParameter = new ObjectParameter("Comentario", comentario);
            }
            else
            {
                comentarioParameter = new ObjectParameter("Comentario", typeof(global::System.String));
            }
    
            ObjectParameter idDestinoAeroParameter;
            if (idDestinoAero.HasValue)
            {
                idDestinoAeroParameter = new ObjectParameter("idDestinoAero", idDestinoAero);
            }
            else
            {
                idDestinoAeroParameter = new ObjectParameter("idDestinoAero", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdateVuelo", idVueloParameter, idAvionParameter, idAeropuertoParameter, fechaSalidaParameter, horaSalidaParameter, fechaLlegadaParameter, horaLlegadaParameter, comentarioParameter, idDestinoAeroParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idPrecio">No Metadata Documentation available.</param>
        /// <param name="idTipoClase">No Metadata Documentation available.</param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        /// <param name="precio">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> spUpdatePrecio(Nullable<global::System.Int32> idPrecio, Nullable<global::System.Int32> idTipoClase, Nullable<global::System.Int32> idVuelo, Nullable<global::System.Decimal> precio)
        {
            ObjectParameter idPrecioParameter;
            if (idPrecio.HasValue)
            {
                idPrecioParameter = new ObjectParameter("idPrecio", idPrecio);
            }
            else
            {
                idPrecioParameter = new ObjectParameter("idPrecio", typeof(global::System.Int32));
            }
    
            ObjectParameter idTipoClaseParameter;
            if (idTipoClase.HasValue)
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", idTipoClase);
            }
            else
            {
                idTipoClaseParameter = new ObjectParameter("idTipoClase", typeof(global::System.Int32));
            }
    
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            ObjectParameter precioParameter;
            if (precio.HasValue)
            {
                precioParameter = new ObjectParameter("Precio", precio);
            }
            else
            {
                precioParameter = new ObjectParameter("Precio", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("spUpdatePrecio", idPrecioParameter, idTipoClaseParameter, idVueloParameter, precioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        public ObjectResult<Vuelo> spGetVueloFromID(Nullable<global::System.Int32> idVuelo)
        {
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Vuelo>("spGetVueloFromID", idVueloParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idVuelo">No Metadata Documentation available.</param>
        public ObjectResult<Vuelo> spGetVueloFromID(Nullable<global::System.Int32> idVuelo, MergeOption mergeOption)
        {
            ObjectParameter idVueloParameter;
            if (idVuelo.HasValue)
            {
                idVueloParameter = new ObjectParameter("idVuelo", idVuelo);
            }
            else
            {
                idVueloParameter = new ObjectParameter("idVuelo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Vuelo>("spGetVueloFromID", mergeOption, idVueloParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Aeropuerto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aeropuerto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aeropuerto object.
        /// </summary>
        /// <param name="idAeropuerto">Initial value of the idAeropuerto property.</param>
        /// <param name="idCiudad">Initial value of the idCiudad property.</param>
        /// <param name="nombreAeropuerto">Initial value of the NombreAeropuerto property.</param>
        /// <param name="siglas">Initial value of the Siglas property.</param>
        public static Aeropuerto CreateAeropuerto(global::System.Int32 idAeropuerto, global::System.Int32 idCiudad, global::System.String nombreAeropuerto, global::System.String siglas)
        {
            Aeropuerto aeropuerto = new Aeropuerto();
            aeropuerto.idAeropuerto = idAeropuerto;
            aeropuerto.idCiudad = idCiudad;
            aeropuerto.NombreAeropuerto = nombreAeropuerto;
            aeropuerto.Siglas = siglas;
            return aeropuerto;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAeropuerto
        {
            get
            {
                return _idAeropuerto;
            }
            set
            {
                if (_idAeropuerto != value)
                {
                    OnidAeropuertoChanging(value);
                    ReportPropertyChanging("idAeropuerto");
                    _idAeropuerto = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idAeropuerto");
                    OnidAeropuertoChanged();
                }
            }
        }
        private global::System.Int32 _idAeropuerto;
        partial void OnidAeropuertoChanging(global::System.Int32 value);
        partial void OnidAeropuertoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCiudad
        {
            get
            {
                return _idCiudad;
            }
            set
            {
                OnidCiudadChanging(value);
                ReportPropertyChanging("idCiudad");
                _idCiudad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCiudad");
                OnidCiudadChanged();
            }
        }
        private global::System.Int32 _idCiudad;
        partial void OnidCiudadChanging(global::System.Int32 value);
        partial void OnidCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreAeropuerto
        {
            get
            {
                return _NombreAeropuerto;
            }
            set
            {
                OnNombreAeropuertoChanging(value);
                ReportPropertyChanging("NombreAeropuerto");
                _NombreAeropuerto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreAeropuerto");
                OnNombreAeropuertoChanged();
            }
        }
        private global::System.String _NombreAeropuerto;
        partial void OnNombreAeropuertoChanging(global::System.String value);
        partial void OnNombreAeropuertoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Siglas
        {
            get
            {
                return _Siglas;
            }
            set
            {
                OnSiglasChanging(value);
                ReportPropertyChanging("Siglas");
                _Siglas = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Siglas");
                OnSiglasChanged();
            }
        }
        private global::System.String _Siglas;
        partial void OnSiglasChanging(global::System.String value);
        partial void OnSiglasChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Aeropuerto_Ciudad", "Ciudad")]
        public Ciudad Ciudad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ciudad>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Ciudad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ciudad>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Ciudad").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ciudad> CiudadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ciudad>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Ciudad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ciudad>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Ciudad", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_Aeropuerto", "Vuelo")]
        public EntityCollection<Vuelo> Vueloes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Vuelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Vuelo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_AeropuertoDestino", "Vuelo")]
        public EntityCollection<Vuelo> Vueloes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Vuelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Vuelo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Asiento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asiento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asiento object.
        /// </summary>
        /// <param name="idAsiento">Initial value of the idAsiento property.</param>
        /// <param name="idAvion">Initial value of the idAvion property.</param>
        /// <param name="idTipoClase">Initial value of the idTipoClase property.</param>
        /// <param name="numero">Initial value of the Numero property.</param>
        /// <param name="fila">Initial value of the Fila property.</param>
        /// <param name="cordX">Initial value of the CordX property.</param>
        /// <param name="cordY">Initial value of the CordY property.</param>
        /// <param name="piso">Initial value of the Piso property.</param>
        public static Asiento CreateAsiento(global::System.Int32 idAsiento, global::System.Int32 idAvion, global::System.Int32 idTipoClase, global::System.String numero, global::System.Int32 fila, global::System.Int32 cordX, global::System.Int32 cordY, global::System.Int32 piso)
        {
            Asiento asiento = new Asiento();
            asiento.idAsiento = idAsiento;
            asiento.idAvion = idAvion;
            asiento.idTipoClase = idTipoClase;
            asiento.Numero = numero;
            asiento.Fila = fila;
            asiento.CordX = cordX;
            asiento.CordY = cordY;
            asiento.Piso = piso;
            return asiento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAsiento
        {
            get
            {
                return _idAsiento;
            }
            set
            {
                if (_idAsiento != value)
                {
                    OnidAsientoChanging(value);
                    ReportPropertyChanging("idAsiento");
                    _idAsiento = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idAsiento");
                    OnidAsientoChanged();
                }
            }
        }
        private global::System.Int32 _idAsiento;
        partial void OnidAsientoChanging(global::System.Int32 value);
        partial void OnidAsientoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAvion
        {
            get
            {
                return _idAvion;
            }
            set
            {
                OnidAvionChanging(value);
                ReportPropertyChanging("idAvion");
                _idAvion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idAvion");
                OnidAvionChanged();
            }
        }
        private global::System.Int32 _idAvion;
        partial void OnidAvionChanging(global::System.Int32 value);
        partial void OnidAvionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTipoClase
        {
            get
            {
                return _idTipoClase;
            }
            set
            {
                OnidTipoClaseChanging(value);
                ReportPropertyChanging("idTipoClase");
                _idTipoClase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idTipoClase");
                OnidTipoClaseChanged();
            }
        }
        private global::System.Int32 _idTipoClase;
        partial void OnidTipoClaseChanging(global::System.Int32 value);
        partial void OnidTipoClaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Numero
        {
            get
            {
                return _Numero;
            }
            set
            {
                OnNumeroChanging(value);
                ReportPropertyChanging("Numero");
                _Numero = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Numero");
                OnNumeroChanged();
            }
        }
        private global::System.String _Numero;
        partial void OnNumeroChanging(global::System.String value);
        partial void OnNumeroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Fila
        {
            get
            {
                return _Fila;
            }
            set
            {
                OnFilaChanging(value);
                ReportPropertyChanging("Fila");
                _Fila = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fila");
                OnFilaChanged();
            }
        }
        private global::System.Int32 _Fila;
        partial void OnFilaChanging(global::System.Int32 value);
        partial void OnFilaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CordX
        {
            get
            {
                return _CordX;
            }
            set
            {
                OnCordXChanging(value);
                ReportPropertyChanging("CordX");
                _CordX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CordX");
                OnCordXChanged();
            }
        }
        private global::System.Int32 _CordX;
        partial void OnCordXChanging(global::System.Int32 value);
        partial void OnCordXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CordY
        {
            get
            {
                return _CordY;
            }
            set
            {
                OnCordYChanging(value);
                ReportPropertyChanging("CordY");
                _CordY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CordY");
                OnCordYChanged();
            }
        }
        private global::System.Int32 _CordY;
        partial void OnCordYChanging(global::System.Int32 value);
        partial void OnCordYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Piso
        {
            get
            {
                return _Piso;
            }
            set
            {
                OnPisoChanging(value);
                ReportPropertyChanging("Piso");
                _Piso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Piso");
                OnPisoChanged();
            }
        }
        private global::System.Int32 _Piso;
        partial void OnPisoChanging(global::System.Int32 value);
        partial void OnPisoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Asiento_Avion", "Avion")]
        public Avion Avion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Asiento_Avion", "Avion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Asiento_Avion", "Avion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Avion> AvionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Asiento_Avion", "Avion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Avion>("ReservaVuelosModel.FK_Asiento_Avion", "Avion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Asiento_TipoClase", "TipoClase")]
        public TipoClase TipoClase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Asiento_TipoClase", "TipoClase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Asiento_TipoClase", "TipoClase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TipoClase> TipoClaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Asiento_TipoClase", "TipoClase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TipoClase>("ReservaVuelosModel.FK_Asiento_TipoClase", "TipoClase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Asiento", "Reservacion")]
        public EntityCollection<Reservacion> Reservacions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Asiento", "Reservacion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Asiento", "Reservacion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Avion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Avion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Avion object.
        /// </summary>
        /// <param name="idAvion">Initial value of the idAvion property.</param>
        /// <param name="idSerie">Initial value of the idSerie property.</param>
        public static Avion CreateAvion(global::System.Int32 idAvion, global::System.Int32 idSerie)
        {
            Avion avion = new Avion();
            avion.idAvion = idAvion;
            avion.idSerie = idSerie;
            return avion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAvion
        {
            get
            {
                return _idAvion;
            }
            set
            {
                if (_idAvion != value)
                {
                    OnidAvionChanging(value);
                    ReportPropertyChanging("idAvion");
                    _idAvion = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idAvion");
                    OnidAvionChanged();
                }
            }
        }
        private global::System.Int32 _idAvion;
        partial void OnidAvionChanging(global::System.Int32 value);
        partial void OnidAvionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSerie
        {
            get
            {
                return _idSerie;
            }
            set
            {
                OnidSerieChanging(value);
                ReportPropertyChanging("idSerie");
                _idSerie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idSerie");
                OnidSerieChanged();
            }
        }
        private global::System.Int32 _idSerie;
        partial void OnidSerieChanging(global::System.Int32 value);
        partial void OnidSerieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Asiento_Avion", "Asiento")]
        public EntityCollection<Asiento> Asientoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asiento>("ReservaVuelosModel.FK_Asiento_Avion", "Asiento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asiento>("ReservaVuelosModel.FK_Asiento_Avion", "Asiento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Avion_SerieAvion", "SerieAvion")]
        public SerieAvion SerieAvion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SerieAvion>("ReservaVuelosModel.FK_Avion_SerieAvion", "SerieAvion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SerieAvion>("ReservaVuelosModel.FK_Avion_SerieAvion", "SerieAvion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SerieAvion> SerieAvionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SerieAvion>("ReservaVuelosModel.FK_Avion_SerieAvion", "SerieAvion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SerieAvion>("ReservaVuelosModel.FK_Avion_SerieAvion", "SerieAvion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_PlantaAvion_Avion", "PlantaAvion")]
        public EntityCollection<PlantaAvion> PlantaAvions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlantaAvion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "PlantaAvion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlantaAvion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "PlantaAvion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_Avion1", "Vuelo")]
        public EntityCollection<Vuelo> Vueloes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_Avion1", "Vuelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vuelo>("ReservaVuelosModel.FK_Vuelo_Avion1", "Vuelo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Ciudad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ciudad : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ciudad object.
        /// </summary>
        /// <param name="idCiudad">Initial value of the idCiudad property.</param>
        /// <param name="idPais">Initial value of the idPais property.</param>
        /// <param name="nombreCiudad">Initial value of the NombreCiudad property.</param>
        public static Ciudad CreateCiudad(global::System.Int32 idCiudad, global::System.Int32 idPais, global::System.String nombreCiudad)
        {
            Ciudad ciudad = new Ciudad();
            ciudad.idCiudad = idCiudad;
            ciudad.idPais = idPais;
            ciudad.NombreCiudad = nombreCiudad;
            return ciudad;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCiudad
        {
            get
            {
                return _idCiudad;
            }
            set
            {
                if (_idCiudad != value)
                {
                    OnidCiudadChanging(value);
                    ReportPropertyChanging("idCiudad");
                    _idCiudad = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCiudad");
                    OnidCiudadChanged();
                }
            }
        }
        private global::System.Int32 _idCiudad;
        partial void OnidCiudadChanging(global::System.Int32 value);
        partial void OnidCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPais
        {
            get
            {
                return _idPais;
            }
            set
            {
                OnidPaisChanging(value);
                ReportPropertyChanging("idPais");
                _idPais = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPais");
                OnidPaisChanged();
            }
        }
        private global::System.Int32 _idPais;
        partial void OnidPaisChanging(global::System.Int32 value);
        partial void OnidPaisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreCiudad
        {
            get
            {
                return _NombreCiudad;
            }
            set
            {
                OnNombreCiudadChanging(value);
                ReportPropertyChanging("NombreCiudad");
                _NombreCiudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreCiudad");
                OnNombreCiudadChanged();
            }
        }
        private global::System.String _NombreCiudad;
        partial void OnNombreCiudadChanging(global::System.String value);
        partial void OnNombreCiudadChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Aeropuerto_Ciudad", "Aeropuerto")]
        public EntityCollection<Aeropuerto> Aeropuertoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Aeropuerto>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Aeropuerto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Aeropuerto>("ReservaVuelosModel.FK_Aeropuerto_Ciudad", "Aeropuerto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Ciudad_Pais", "Pais")]
        public Pais Pai
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("ReservaVuelosModel.FK_Ciudad_Pais", "Pais").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("ReservaVuelosModel.FK_Ciudad_Pais", "Pais").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pais> PaiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pais>("ReservaVuelosModel.FK_Ciudad_Pais", "Pais");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pais>("ReservaVuelosModel.FK_Ciudad_Pais", "Pais", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="MarcaAvion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarcaAvion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarcaAvion object.
        /// </summary>
        /// <param name="idMarca">Initial value of the idMarca property.</param>
        /// <param name="nombreMarca">Initial value of the NombreMarca property.</param>
        public static MarcaAvion CreateMarcaAvion(global::System.Int32 idMarca, global::System.String nombreMarca)
        {
            MarcaAvion marcaAvion = new MarcaAvion();
            marcaAvion.idMarca = idMarca;
            marcaAvion.NombreMarca = nombreMarca;
            return marcaAvion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMarca
        {
            get
            {
                return _idMarca;
            }
            set
            {
                if (_idMarca != value)
                {
                    OnidMarcaChanging(value);
                    ReportPropertyChanging("idMarca");
                    _idMarca = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idMarca");
                    OnidMarcaChanged();
                }
            }
        }
        private global::System.Int32 _idMarca;
        partial void OnidMarcaChanging(global::System.Int32 value);
        partial void OnidMarcaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreMarca
        {
            get
            {
                return _NombreMarca;
            }
            set
            {
                OnNombreMarcaChanging(value);
                ReportPropertyChanging("NombreMarca");
                _NombreMarca = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreMarca");
                OnNombreMarcaChanged();
            }
        }
        private global::System.String _NombreMarca;
        partial void OnNombreMarcaChanging(global::System.String value);
        partial void OnNombreMarcaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_SerieAvion_MarcaAvion", "SerieAvion")]
        public EntityCollection<SerieAvion> SerieAvions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SerieAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "SerieAvion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SerieAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "SerieAvion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="NivelUsuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NivelUsuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NivelUsuario object.
        /// </summary>
        /// <param name="idNivel">Initial value of the idNivel property.</param>
        /// <param name="nombreNivel">Initial value of the NombreNivel property.</param>
        /// <param name="pesoNivel">Initial value of the PesoNivel property.</param>
        public static NivelUsuario CreateNivelUsuario(global::System.Int32 idNivel, global::System.String nombreNivel, global::System.Int32 pesoNivel)
        {
            NivelUsuario nivelUsuario = new NivelUsuario();
            nivelUsuario.idNivel = idNivel;
            nivelUsuario.NombreNivel = nombreNivel;
            nivelUsuario.PesoNivel = pesoNivel;
            return nivelUsuario;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idNivel
        {
            get
            {
                return _idNivel;
            }
            set
            {
                if (_idNivel != value)
                {
                    OnidNivelChanging(value);
                    ReportPropertyChanging("idNivel");
                    _idNivel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idNivel");
                    OnidNivelChanged();
                }
            }
        }
        private global::System.Int32 _idNivel;
        partial void OnidNivelChanging(global::System.Int32 value);
        partial void OnidNivelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreNivel
        {
            get
            {
                return _NombreNivel;
            }
            set
            {
                OnNombreNivelChanging(value);
                ReportPropertyChanging("NombreNivel");
                _NombreNivel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreNivel");
                OnNombreNivelChanged();
            }
        }
        private global::System.String _NombreNivel;
        partial void OnNombreNivelChanging(global::System.String value);
        partial void OnNombreNivelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PesoNivel
        {
            get
            {
                return _PesoNivel;
            }
            set
            {
                OnPesoNivelChanging(value);
                ReportPropertyChanging("PesoNivel");
                _PesoNivel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PesoNivel");
                OnPesoNivelChanged();
            }
        }
        private global::System.Int32 _PesoNivel;
        partial void OnPesoNivelChanging(global::System.Int32 value);
        partial void OnPesoNivelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Usuario_NivelUsuario", "Usuario")]
        public EntityCollection<Usuario> Usuarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Usuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Usuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "Usuario", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Pais")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pais : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pais object.
        /// </summary>
        /// <param name="idPais">Initial value of the idPais property.</param>
        /// <param name="nombrePais">Initial value of the NombrePais property.</param>
        public static Pais CreatePais(global::System.Int32 idPais, global::System.String nombrePais)
        {
            Pais pais = new Pais();
            pais.idPais = idPais;
            pais.NombrePais = nombrePais;
            return pais;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPais
        {
            get
            {
                return _idPais;
            }
            set
            {
                if (_idPais != value)
                {
                    OnidPaisChanging(value);
                    ReportPropertyChanging("idPais");
                    _idPais = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPais");
                    OnidPaisChanged();
                }
            }
        }
        private global::System.Int32 _idPais;
        partial void OnidPaisChanging(global::System.Int32 value);
        partial void OnidPaisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombrePais
        {
            get
            {
                return _NombrePais;
            }
            set
            {
                OnNombrePaisChanging(value);
                ReportPropertyChanging("NombrePais");
                _NombrePais = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombrePais");
                OnNombrePaisChanged();
            }
        }
        private global::System.String _NombrePais;
        partial void OnNombrePaisChanging(global::System.String value);
        partial void OnNombrePaisChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Ciudad_Pais", "Ciudad")]
        public EntityCollection<Ciudad> Ciudads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ciudad>("ReservaVuelosModel.FK_Ciudad_Pais", "Ciudad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ciudad>("ReservaVuelosModel.FK_Ciudad_Pais", "Ciudad", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Persona")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Persona : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Persona object.
        /// </summary>
        /// <param name="idPersona">Initial value of the idPersona property.</param>
        /// <param name="nombrePersona">Initial value of the NombrePersona property.</param>
        /// <param name="apellidosPersona">Initial value of the ApellidosPersona property.</param>
        /// <param name="pasaporte">Initial value of the Pasaporte property.</param>
        public static Persona CreatePersona(global::System.Int32 idPersona, global::System.String nombrePersona, global::System.String apellidosPersona, global::System.String pasaporte)
        {
            Persona persona = new Persona();
            persona.idPersona = idPersona;
            persona.NombrePersona = nombrePersona;
            persona.ApellidosPersona = apellidosPersona;
            persona.Pasaporte = pasaporte;
            return persona;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPersona
        {
            get
            {
                return _idPersona;
            }
            set
            {
                if (_idPersona != value)
                {
                    OnidPersonaChanging(value);
                    ReportPropertyChanging("idPersona");
                    _idPersona = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPersona");
                    OnidPersonaChanged();
                }
            }
        }
        private global::System.Int32 _idPersona;
        partial void OnidPersonaChanging(global::System.Int32 value);
        partial void OnidPersonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombrePersona
        {
            get
            {
                return _NombrePersona;
            }
            set
            {
                OnNombrePersonaChanging(value);
                ReportPropertyChanging("NombrePersona");
                _NombrePersona = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombrePersona");
                OnNombrePersonaChanged();
            }
        }
        private global::System.String _NombrePersona;
        partial void OnNombrePersonaChanging(global::System.String value);
        partial void OnNombrePersonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApellidosPersona
        {
            get
            {
                return _ApellidosPersona;
            }
            set
            {
                OnApellidosPersonaChanging(value);
                ReportPropertyChanging("ApellidosPersona");
                _ApellidosPersona = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApellidosPersona");
                OnApellidosPersonaChanged();
            }
        }
        private global::System.String _ApellidosPersona;
        partial void OnApellidosPersonaChanging(global::System.String value);
        partial void OnApellidosPersonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pasaporte
        {
            get
            {
                return _Pasaporte;
            }
            set
            {
                OnPasaporteChanging(value);
                ReportPropertyChanging("Pasaporte");
                _Pasaporte = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pasaporte");
                OnPasaporteChanged();
            }
        }
        private global::System.String _Pasaporte;
        partial void OnPasaporteChanging(global::System.String value);
        partial void OnPasaporteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Persona", "Reservacion")]
        public EntityCollection<Reservacion> Reservacions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Persona", "Reservacion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Persona", "Reservacion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="PlantaAvion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlantaAvion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlantaAvion object.
        /// </summary>
        /// <param name="idPlanta">Initial value of the idPlanta property.</param>
        /// <param name="idAvion">Initial value of the idAvion property.</param>
        /// <param name="imagenPlanta">Initial value of the ImagenPlanta property.</param>
        /// <param name="piso">Initial value of the Piso property.</param>
        public static PlantaAvion CreatePlantaAvion(global::System.Int32 idPlanta, global::System.Int32 idAvion, global::System.Byte[] imagenPlanta, global::System.Int32 piso)
        {
            PlantaAvion plantaAvion = new PlantaAvion();
            plantaAvion.idPlanta = idPlanta;
            plantaAvion.idAvion = idAvion;
            plantaAvion.ImagenPlanta = imagenPlanta;
            plantaAvion.Piso = piso;
            return plantaAvion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPlanta
        {
            get
            {
                return _idPlanta;
            }
            set
            {
                if (_idPlanta != value)
                {
                    OnidPlantaChanging(value);
                    ReportPropertyChanging("idPlanta");
                    _idPlanta = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPlanta");
                    OnidPlantaChanged();
                }
            }
        }
        private global::System.Int32 _idPlanta;
        partial void OnidPlantaChanging(global::System.Int32 value);
        partial void OnidPlantaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAvion
        {
            get
            {
                return _idAvion;
            }
            set
            {
                OnidAvionChanging(value);
                ReportPropertyChanging("idAvion");
                _idAvion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idAvion");
                OnidAvionChanged();
            }
        }
        private global::System.Int32 _idAvion;
        partial void OnidAvionChanging(global::System.Int32 value);
        partial void OnidAvionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImagenPlanta
        {
            get
            {
                return StructuralObject.GetValidValue(_ImagenPlanta);
            }
            set
            {
                OnImagenPlantaChanging(value);
                ReportPropertyChanging("ImagenPlanta");
                _ImagenPlanta = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImagenPlanta");
                OnImagenPlantaChanged();
            }
        }
        private global::System.Byte[] _ImagenPlanta;
        partial void OnImagenPlantaChanging(global::System.Byte[] value);
        partial void OnImagenPlantaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Piso
        {
            get
            {
                return _Piso;
            }
            set
            {
                OnPisoChanging(value);
                ReportPropertyChanging("Piso");
                _Piso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Piso");
                OnPisoChanged();
            }
        }
        private global::System.Int32 _Piso;
        partial void OnPisoChanging(global::System.Int32 value);
        partial void OnPisoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_PlantaAvion_Avion", "Avion")]
        public Avion Avion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "Avion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "Avion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Avion> AvionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "Avion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Avion>("ReservaVuelosModel.FK_PlantaAvion_Avion", "Avion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Precio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Precio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Precio object.
        /// </summary>
        /// <param name="idPrecio">Initial value of the idPrecio property.</param>
        /// <param name="idTipoClase">Initial value of the idTipoClase property.</param>
        /// <param name="idVuelo">Initial value of the idVuelo property.</param>
        /// <param name="precio1">Initial value of the Precio1 property.</param>
        public static Precio CreatePrecio(global::System.Int32 idPrecio, global::System.Int32 idTipoClase, global::System.Int32 idVuelo, global::System.Decimal precio1)
        {
            Precio precio = new Precio();
            precio.idPrecio = idPrecio;
            precio.idTipoClase = idTipoClase;
            precio.idVuelo = idVuelo;
            precio.Precio1 = precio1;
            return precio;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPrecio
        {
            get
            {
                return _idPrecio;
            }
            set
            {
                if (_idPrecio != value)
                {
                    OnidPrecioChanging(value);
                    ReportPropertyChanging("idPrecio");
                    _idPrecio = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPrecio");
                    OnidPrecioChanged();
                }
            }
        }
        private global::System.Int32 _idPrecio;
        partial void OnidPrecioChanging(global::System.Int32 value);
        partial void OnidPrecioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTipoClase
        {
            get
            {
                return _idTipoClase;
            }
            set
            {
                OnidTipoClaseChanging(value);
                ReportPropertyChanging("idTipoClase");
                _idTipoClase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idTipoClase");
                OnidTipoClaseChanged();
            }
        }
        private global::System.Int32 _idTipoClase;
        partial void OnidTipoClaseChanging(global::System.Int32 value);
        partial void OnidTipoClaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idVuelo
        {
            get
            {
                return _idVuelo;
            }
            set
            {
                OnidVueloChanging(value);
                ReportPropertyChanging("idVuelo");
                _idVuelo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idVuelo");
                OnidVueloChanged();
            }
        }
        private global::System.Int32 _idVuelo;
        partial void OnidVueloChanging(global::System.Int32 value);
        partial void OnidVueloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Precio1
        {
            get
            {
                return _Precio1;
            }
            set
            {
                OnPrecio1Changing(value);
                ReportPropertyChanging("Precio1");
                _Precio1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precio1");
                OnPrecio1Changed();
            }
        }
        private global::System.Decimal _Precio1;
        partial void OnPrecio1Changing(global::System.Decimal value);
        partial void OnPrecio1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Precio_TipoClase", "TipoClase")]
        public TipoClase TipoClase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Precio_TipoClase", "TipoClase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Precio_TipoClase", "TipoClase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TipoClase> TipoClaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TipoClase>("ReservaVuelosModel.FK_Precio_TipoClase", "TipoClase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TipoClase>("ReservaVuelosModel.FK_Precio_TipoClase", "TipoClase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Precio_Vuelo", "Vuelo")]
        public Vuelo Vuelo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Precio_Vuelo", "Vuelo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Precio_Vuelo", "Vuelo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vuelo> VueloReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Precio_Vuelo", "Vuelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vuelo>("ReservaVuelosModel.FK_Precio_Vuelo", "Vuelo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Reservacion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservacion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservacion object.
        /// </summary>
        /// <param name="idReservacion">Initial value of the idReservacion property.</param>
        /// <param name="idPersona">Initial value of the idPersona property.</param>
        /// <param name="idVuelo">Initial value of the idVuelo property.</param>
        /// <param name="idAsiento">Initial value of the idAsiento property.</param>
        /// <param name="idUsuario">Initial value of the idUsuario property.</param>
        public static Reservacion CreateReservacion(global::System.Int32 idReservacion, global::System.Int32 idPersona, global::System.Int32 idVuelo, global::System.Int32 idAsiento, global::System.Int32 idUsuario)
        {
            Reservacion reservacion = new Reservacion();
            reservacion.idReservacion = idReservacion;
            reservacion.idPersona = idPersona;
            reservacion.idVuelo = idVuelo;
            reservacion.idAsiento = idAsiento;
            reservacion.idUsuario = idUsuario;
            return reservacion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idReservacion
        {
            get
            {
                return _idReservacion;
            }
            set
            {
                if (_idReservacion != value)
                {
                    OnidReservacionChanging(value);
                    ReportPropertyChanging("idReservacion");
                    _idReservacion = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idReservacion");
                    OnidReservacionChanged();
                }
            }
        }
        private global::System.Int32 _idReservacion;
        partial void OnidReservacionChanging(global::System.Int32 value);
        partial void OnidReservacionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPersona
        {
            get
            {
                return _idPersona;
            }
            set
            {
                OnidPersonaChanging(value);
                ReportPropertyChanging("idPersona");
                _idPersona = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPersona");
                OnidPersonaChanged();
            }
        }
        private global::System.Int32 _idPersona;
        partial void OnidPersonaChanging(global::System.Int32 value);
        partial void OnidPersonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idVuelo
        {
            get
            {
                return _idVuelo;
            }
            set
            {
                OnidVueloChanging(value);
                ReportPropertyChanging("idVuelo");
                _idVuelo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idVuelo");
                OnidVueloChanged();
            }
        }
        private global::System.Int32 _idVuelo;
        partial void OnidVueloChanging(global::System.Int32 value);
        partial void OnidVueloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAsiento
        {
            get
            {
                return _idAsiento;
            }
            set
            {
                OnidAsientoChanging(value);
                ReportPropertyChanging("idAsiento");
                _idAsiento = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idAsiento");
                OnidAsientoChanged();
            }
        }
        private global::System.Int32 _idAsiento;
        partial void OnidAsientoChanging(global::System.Int32 value);
        partial void OnidAsientoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUsuario
        {
            get
            {
                return _idUsuario;
            }
            set
            {
                OnidUsuarioChanging(value);
                ReportPropertyChanging("idUsuario");
                _idUsuario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idUsuario");
                OnidUsuarioChanged();
            }
        }
        private global::System.Int32 _idUsuario;
        partial void OnidUsuarioChanging(global::System.Int32 value);
        partial void OnidUsuarioChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Asiento", "Asiento")]
        public Asiento Asiento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asiento>("ReservaVuelosModel.FK_Reservacion_Asiento", "Asiento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asiento>("ReservaVuelosModel.FK_Reservacion_Asiento", "Asiento").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Asiento> AsientoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Asiento>("ReservaVuelosModel.FK_Reservacion_Asiento", "Asiento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Asiento>("ReservaVuelosModel.FK_Reservacion_Asiento", "Asiento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Persona", "Persona")]
        public Persona Persona
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persona>("ReservaVuelosModel.FK_Reservacion_Persona", "Persona").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persona>("ReservaVuelosModel.FK_Reservacion_Persona", "Persona").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persona> PersonaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persona>("ReservaVuelosModel.FK_Reservacion_Persona", "Persona");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persona>("ReservaVuelosModel.FK_Reservacion_Persona", "Persona", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Usuario", "Usuario")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ReservaVuelosModel.FK_Reservacion_Usuario", "Usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ReservaVuelosModel.FK_Reservacion_Usuario", "Usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("ReservaVuelosModel.FK_Reservacion_Usuario", "Usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("ReservaVuelosModel.FK_Reservacion_Usuario", "Usuario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Vuelo", "Vuelo")]
        public Vuelo Vuelo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Vuelo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Vuelo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vuelo> VueloReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vuelo>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Vuelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vuelo>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Vuelo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="SerieAvion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SerieAvion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SerieAvion object.
        /// </summary>
        /// <param name="idSerie">Initial value of the idSerie property.</param>
        /// <param name="idMarca">Initial value of the idMarca property.</param>
        /// <param name="nombreSerie">Initial value of the NombreSerie property.</param>
        public static SerieAvion CreateSerieAvion(global::System.Int32 idSerie, global::System.Int32 idMarca, global::System.String nombreSerie)
        {
            SerieAvion serieAvion = new SerieAvion();
            serieAvion.idSerie = idSerie;
            serieAvion.idMarca = idMarca;
            serieAvion.NombreSerie = nombreSerie;
            return serieAvion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idSerie
        {
            get
            {
                return _idSerie;
            }
            set
            {
                if (_idSerie != value)
                {
                    OnidSerieChanging(value);
                    ReportPropertyChanging("idSerie");
                    _idSerie = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idSerie");
                    OnidSerieChanged();
                }
            }
        }
        private global::System.Int32 _idSerie;
        partial void OnidSerieChanging(global::System.Int32 value);
        partial void OnidSerieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idMarca
        {
            get
            {
                return _idMarca;
            }
            set
            {
                OnidMarcaChanging(value);
                ReportPropertyChanging("idMarca");
                _idMarca = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idMarca");
                OnidMarcaChanged();
            }
        }
        private global::System.Int32 _idMarca;
        partial void OnidMarcaChanging(global::System.Int32 value);
        partial void OnidMarcaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreSerie
        {
            get
            {
                return _NombreSerie;
            }
            set
            {
                OnNombreSerieChanging(value);
                ReportPropertyChanging("NombreSerie");
                _NombreSerie = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreSerie");
                OnNombreSerieChanged();
            }
        }
        private global::System.String _NombreSerie;
        partial void OnNombreSerieChanging(global::System.String value);
        partial void OnNombreSerieChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Avion_SerieAvion", "Avion")]
        public EntityCollection<Avion> Avions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Avion>("ReservaVuelosModel.FK_Avion_SerieAvion", "Avion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Avion>("ReservaVuelosModel.FK_Avion_SerieAvion", "Avion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_SerieAvion_MarcaAvion", "MarcaAvion")]
        public MarcaAvion MarcaAvion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarcaAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "MarcaAvion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarcaAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "MarcaAvion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MarcaAvion> MarcaAvionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarcaAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "MarcaAvion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MarcaAvion>("ReservaVuelosModel.FK_SerieAvion_MarcaAvion", "MarcaAvion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="TipoClase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TipoClase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TipoClase object.
        /// </summary>
        /// <param name="idTipoClase">Initial value of the idTipoClase property.</param>
        /// <param name="nombreClase">Initial value of the NombreClase property.</param>
        public static TipoClase CreateTipoClase(global::System.Int32 idTipoClase, global::System.String nombreClase)
        {
            TipoClase tipoClase = new TipoClase();
            tipoClase.idTipoClase = idTipoClase;
            tipoClase.NombreClase = nombreClase;
            return tipoClase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTipoClase
        {
            get
            {
                return _idTipoClase;
            }
            set
            {
                if (_idTipoClase != value)
                {
                    OnidTipoClaseChanging(value);
                    ReportPropertyChanging("idTipoClase");
                    _idTipoClase = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idTipoClase");
                    OnidTipoClaseChanged();
                }
            }
        }
        private global::System.Int32 _idTipoClase;
        partial void OnidTipoClaseChanging(global::System.Int32 value);
        partial void OnidTipoClaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreClase
        {
            get
            {
                return _NombreClase;
            }
            set
            {
                OnNombreClaseChanging(value);
                ReportPropertyChanging("NombreClase");
                _NombreClase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreClase");
                OnNombreClaseChanged();
            }
        }
        private global::System.String _NombreClase;
        partial void OnNombreClaseChanging(global::System.String value);
        partial void OnNombreClaseChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Asiento_TipoClase", "Asiento")]
        public EntityCollection<Asiento> Asientoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asiento>("ReservaVuelosModel.FK_Asiento_TipoClase", "Asiento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asiento>("ReservaVuelosModel.FK_Asiento_TipoClase", "Asiento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Precio_TipoClase", "Precio")]
        public EntityCollection<Precio> Precios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Precio>("ReservaVuelosModel.FK_Precio_TipoClase", "Precio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Precio>("ReservaVuelosModel.FK_Precio_TipoClase", "Precio", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Usuario object.
        /// </summary>
        /// <param name="idUsuario">Initial value of the idUsuario property.</param>
        /// <param name="idNivel">Initial value of the idNivel property.</param>
        /// <param name="nombre">Initial value of the Nombre property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isActive">Initial value of the isActive property.</param>
        public static Usuario CreateUsuario(global::System.Int32 idUsuario, global::System.Int32 idNivel, global::System.String nombre, global::System.String login, global::System.String password, global::System.Boolean isActive)
        {
            Usuario usuario = new Usuario();
            usuario.idUsuario = idUsuario;
            usuario.idNivel = idNivel;
            usuario.Nombre = nombre;
            usuario.Login = login;
            usuario.Password = password;
            usuario.isActive = isActive;
            return usuario;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUsuario
        {
            get
            {
                return _idUsuario;
            }
            set
            {
                if (_idUsuario != value)
                {
                    OnidUsuarioChanging(value);
                    ReportPropertyChanging("idUsuario");
                    _idUsuario = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUsuario");
                    OnidUsuarioChanged();
                }
            }
        }
        private global::System.Int32 _idUsuario;
        partial void OnidUsuarioChanging(global::System.Int32 value);
        partial void OnidUsuarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idNivel
        {
            get
            {
                return _idNivel;
            }
            set
            {
                OnidNivelChanging(value);
                ReportPropertyChanging("idNivel");
                _idNivel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idNivel");
                OnidNivelChanged();
            }
        }
        private global::System.Int32 _idNivel;
        partial void OnidNivelChanging(global::System.Int32 value);
        partial void OnidNivelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private global::System.Boolean _isActive;
        partial void OnisActiveChanging(global::System.Boolean value);
        partial void OnisActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Usuario_NivelUsuario", "NivelUsuario")]
        public NivelUsuario NivelUsuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NivelUsuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "NivelUsuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NivelUsuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "NivelUsuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NivelUsuario> NivelUsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NivelUsuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "NivelUsuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NivelUsuario>("ReservaVuelosModel.FK_Usuario_NivelUsuario", "NivelUsuario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Usuario", "Reservacion")]
        public EntityCollection<Reservacion> Reservacions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Usuario", "Reservacion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Usuario", "Reservacion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ReservaVuelosModel", Name="Vuelo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vuelo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vuelo object.
        /// </summary>
        /// <param name="idVuelo">Initial value of the idVuelo property.</param>
        /// <param name="idAvion">Initial value of the idAvion property.</param>
        /// <param name="idPuertoLlegada">Initial value of the idPuertoLlegada property.</param>
        /// <param name="fechaSalida">Initial value of the FechaSalida property.</param>
        /// <param name="horaSalida">Initial value of the HoraSalida property.</param>
        /// <param name="fechaLlegada">Initial value of the FechaLlegada property.</param>
        /// <param name="horaLlegada">Initial value of the HoraLlegada property.</param>
        /// <param name="idPuertoSalida">Initial value of the idPuertoSalida property.</param>
        public static Vuelo CreateVuelo(global::System.Int32 idVuelo, global::System.Int32 idAvion, global::System.Int32 idPuertoLlegada, global::System.DateTime fechaSalida, global::System.TimeSpan horaSalida, global::System.DateTime fechaLlegada, global::System.TimeSpan horaLlegada, global::System.Int32 idPuertoSalida)
        {
            Vuelo vuelo = new Vuelo();
            vuelo.idVuelo = idVuelo;
            vuelo.idAvion = idAvion;
            vuelo.idPuertoLlegada = idPuertoLlegada;
            vuelo.FechaSalida = fechaSalida;
            vuelo.HoraSalida = horaSalida;
            vuelo.FechaLlegada = fechaLlegada;
            vuelo.HoraLlegada = horaLlegada;
            vuelo.idPuertoSalida = idPuertoSalida;
            return vuelo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idVuelo
        {
            get
            {
                return _idVuelo;
            }
            set
            {
                if (_idVuelo != value)
                {
                    OnidVueloChanging(value);
                    ReportPropertyChanging("idVuelo");
                    _idVuelo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idVuelo");
                    OnidVueloChanged();
                }
            }
        }
        private global::System.Int32 _idVuelo;
        partial void OnidVueloChanging(global::System.Int32 value);
        partial void OnidVueloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idAvion
        {
            get
            {
                return _idAvion;
            }
            set
            {
                OnidAvionChanging(value);
                ReportPropertyChanging("idAvion");
                _idAvion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idAvion");
                OnidAvionChanged();
            }
        }
        private global::System.Int32 _idAvion;
        partial void OnidAvionChanging(global::System.Int32 value);
        partial void OnidAvionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPuertoLlegada
        {
            get
            {
                return _idPuertoLlegada;
            }
            set
            {
                OnidPuertoLlegadaChanging(value);
                ReportPropertyChanging("idPuertoLlegada");
                _idPuertoLlegada = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPuertoLlegada");
                OnidPuertoLlegadaChanged();
            }
        }
        private global::System.Int32 _idPuertoLlegada;
        partial void OnidPuertoLlegadaChanging(global::System.Int32 value);
        partial void OnidPuertoLlegadaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaSalida
        {
            get
            {
                return _FechaSalida;
            }
            set
            {
                OnFechaSalidaChanging(value);
                ReportPropertyChanging("FechaSalida");
                _FechaSalida = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaSalida");
                OnFechaSalidaChanged();
            }
        }
        private global::System.DateTime _FechaSalida;
        partial void OnFechaSalidaChanging(global::System.DateTime value);
        partial void OnFechaSalidaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan HoraSalida
        {
            get
            {
                return _HoraSalida;
            }
            set
            {
                OnHoraSalidaChanging(value);
                ReportPropertyChanging("HoraSalida");
                _HoraSalida = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoraSalida");
                OnHoraSalidaChanged();
            }
        }
        private global::System.TimeSpan _HoraSalida;
        partial void OnHoraSalidaChanging(global::System.TimeSpan value);
        partial void OnHoraSalidaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaLlegada
        {
            get
            {
                return _FechaLlegada;
            }
            set
            {
                OnFechaLlegadaChanging(value);
                ReportPropertyChanging("FechaLlegada");
                _FechaLlegada = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaLlegada");
                OnFechaLlegadaChanged();
            }
        }
        private global::System.DateTime _FechaLlegada;
        partial void OnFechaLlegadaChanging(global::System.DateTime value);
        partial void OnFechaLlegadaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan HoraLlegada
        {
            get
            {
                return _HoraLlegada;
            }
            set
            {
                OnHoraLlegadaChanging(value);
                ReportPropertyChanging("HoraLlegada");
                _HoraLlegada = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HoraLlegada");
                OnHoraLlegadaChanged();
            }
        }
        private global::System.TimeSpan _HoraLlegada;
        partial void OnHoraLlegadaChanging(global::System.TimeSpan value);
        partial void OnHoraLlegadaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comentario
        {
            get
            {
                return _Comentario;
            }
            set
            {
                OnComentarioChanging(value);
                ReportPropertyChanging("Comentario");
                _Comentario = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comentario");
                OnComentarioChanged();
            }
        }
        private global::System.String _Comentario;
        partial void OnComentarioChanging(global::System.String value);
        partial void OnComentarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPuertoSalida
        {
            get
            {
                return _idPuertoSalida;
            }
            set
            {
                OnidPuertoSalidaChanging(value);
                ReportPropertyChanging("idPuertoSalida");
                _idPuertoSalida = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPuertoSalida");
                OnidPuertoSalidaChanged();
            }
        }
        private global::System.Int32 _idPuertoSalida;
        partial void OnidPuertoSalidaChanging(global::System.Int32 value);
        partial void OnidPuertoSalidaChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_Aeropuerto", "Aeropuerto")]
        public Aeropuerto Aeropuerto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Aeropuerto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Aeropuerto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aeropuerto> AeropuertoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Aeropuerto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_Aeropuerto", "Aeropuerto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_AeropuertoDestino", "Aeropuerto")]
        public Aeropuerto Aeropuerto1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Aeropuerto").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Aeropuerto").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aeropuerto> Aeropuerto1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Aeropuerto");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aeropuerto>("ReservaVuelosModel.FK_Vuelo_AeropuertoDestino", "Aeropuerto", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Vuelo_Avion1", "Avion")]
        public Avion Avion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Vuelo_Avion1", "Avion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Vuelo_Avion1", "Avion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Avion> AvionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Avion>("ReservaVuelosModel.FK_Vuelo_Avion1", "Avion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Avion>("ReservaVuelosModel.FK_Vuelo_Avion1", "Avion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Precio_Vuelo", "Precio")]
        public EntityCollection<Precio> Precios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Precio>("ReservaVuelosModel.FK_Precio_Vuelo", "Precio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Precio>("ReservaVuelosModel.FK_Precio_Vuelo", "Precio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ReservaVuelosModel", "FK_Reservacion_Vuelo", "Reservacion")]
        public EntityCollection<Reservacion> Reservacions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Reservacion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservacion>("ReservaVuelosModel.FK_Reservacion_Vuelo", "Reservacion", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
